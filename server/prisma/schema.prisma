// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  email    String @unique
  address  String
  password String
  user_profile User_Profile?
  events   Event_User[]
  groups   Group_User[]
}

model User_Profile {
  id          Int    @id @default(autoincrement())
  user        User   @relation(fields: [user_id], references: [id])
  user_id     Int    @unique
  first_name  String
  last_name   String
  zip_code    String @db.VarChar(5)
}

model Event {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  address     String
  zip_code    String @db.VarChar(5)
  attendees   Event_User[]
  groups      Group_Event[]
}

model Group {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  is_full     Boolean @default(false)
  members     Group_User[]
  events      Group_Event[]
}

model Event_User {
  user        User @relation(fields: [user_id], references: [id])
  user_id     Int
  event       Event @relation(fields: [event_id], references: [id])
  event_id    Int
  status      Status @default(PENDING)

  @@id([user_id, event_id])
}

model Group_User {
  user        User @relation(fields: [user_id], references: [id])
  user_id     Int
  group       Group @relation(fields: [group_id], references: [id])
  group_id    Int
  status      Status @default(PENDING)

  @@id([user_id, group_id])
}

model Group_Event {
  group       Group @relation(fields: [group_id], references: [id])
  group_id    Int
  event       Event @relation(fields: [event_id], references: [id])
  event_id    Int

  @@id([group_id, event_id])
}

model Interest {
  id          Int    @id @default(autoincrement())
  title       String
  parent_id   Int?
  parent      Interest? @relation("InterestsSubInterests", fields: [parent_id], references: [id])
  children    Interest[] @relation("InterestsSubInterests")
}


enum Status {
  PENDING
  ACCEPTED
  REJECTED
}
