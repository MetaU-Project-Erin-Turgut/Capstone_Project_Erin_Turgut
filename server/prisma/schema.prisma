generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  username     String        @unique
  email        String        @unique
  password     String
  address      String
  interest_id  Int?
  latitude     Decimal       @db.Decimal(8, 5)
  longitude    Decimal       @db.Decimal(8, 5)
  events       Event_User[]
  groups       Group_User[]
  interest     Interest?     @relation(fields: [interest_id], references: [id])
  user_profile User_Profile?
}

model User_Profile {
  id         Int    @id @default(autoincrement())
  first_name String
  last_name  String
  zip_code   String @db.VarChar(5)
  user_id    Int    @unique
  user       User   @relation(fields: [user_id], references: [id])
}

model Event {
  id          Int           @id @default(autoincrement())
  title       String
  description String
  address     String
  zip_code    String        @db.VarChar(5)
  latitude    Decimal       @db.Decimal(8, 5)
  longitude   Decimal       @db.Decimal(8, 5)
  attendees   Event_User[]
  groups      Group_Event[]
}

model Group {
  id          Int           @id @default(autoincrement())
  title       String
  description String
  is_full     Boolean       @default(false)
  events      Group_Event[]
  members     Group_User[]
}

model Event_User {
  user_id  Int
  event_id Int
  status   Status @default(PENDING)
  event    Event  @relation(fields: [event_id], references: [id])
  user     User   @relation(fields: [user_id], references: [id])

  @@id([user_id, event_id])
}

model Group_User {
  user_id  Int
  group_id Int
  status   Status @default(PENDING)
  group    Group  @relation(fields: [group_id], references: [id])
  user     User   @relation(fields: [user_id], references: [id])

  @@id([user_id, group_id])
}

model Group_Event {
  group_id Int
  event_id Int
  event    Event @relation(fields: [event_id], references: [id])
  group    Group @relation(fields: [group_id], references: [id])

  @@id([group_id, event_id])
}

model Interest {
  id        Int        @id @default(autoincrement())
  title     String
  parent_id Int?
  parent    Interest?  @relation("InterestsSubInterests", fields: [parent_id], references: [id])
  children  Interest[] @relation("InterestsSubInterests")
  users     User[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}

enum Status {
  PENDING
  ACCEPTED
  REJECTED
}
